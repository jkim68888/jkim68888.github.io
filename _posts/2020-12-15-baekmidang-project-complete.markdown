---
layout: post
title:  "첫번째 프로젝트 - 백미당 리뉴얼 PC메인페이지"
date:   2020-12-15 09:17:46 +0900
categories: jekyll update
---
### 첫 프로젝트, 백미당 PC메인페이지 제작하기

첫번째 프로젝트는 백미당 메인페이지를 리뉴얼하는 것이었다. 이번 프로젝트는 적응형웹으로 만들것이라서 pc용 웹을 먼저 제작한 후, 모바일용 웹을 따로 만들기로 계획하였다.
혼자 진행하는 프로젝트라서, 디자인부터 코딩까지 (심지어 로고 제작까지) 모두 혼자 작업하게 되었다.

## 로고 제작
사실 로고를 디자인시안까지 다 제작하고 코딩하면서까지 계속해서 바꿨다.
로고 만드는게 가장 어려웠다고 할 수도 있을 것 같다.
로고는 최대한 심플하게 디자인하려고 노력했으며, 메인페이지에 사용한 메인컬러에 맞춰서 제작하였다.

## 시안디자인 제작
시안은 12칼럼 그리드시스템에 맞춰 제작하였다. 툴은 포토샵을 이용하였다. 백미당을 디자인했을때 중점을 뒀던 부분은 3가지 정도가 있다.
1. 그리드시스템에 맞춰 제작하기
2. 컬러의 통일감
3. 디자인의 일관성

![이미지](https://user-images.githubusercontent.com/75922558/102085078-8045c680-3e59-11eb-8948-ebfe985faed9.jpg)

## 코딩 시작

### 레이아웃
우선, html로 태그들을 작성한 후, css에서 header, main, footer의 영역을 설정해 놓은후 행간 레이아웃을 잡고, 그 다음 열간 레이아웃을 작업했다. 
레이아웃을 잡을때 임의로 백그라운드 컬러를 넣어서 영역확인을 할 수 있도록 했다.

### 컨텐츠 담기
레이아웃을 짜고 난 후, 그 안에 컨텐츠들을 넣기 시작했다. 헤더와 푸터를 가장 먼저 작업했고 그 다음 메인을 작업한 후 스크롤 탑 버튼을 만든 다음 팝업을 만들어 완성시켰다. 

### 푸터
푸터에서 글자와 sns아이콘, 패밀리사이트 박스를 배치할때 html에서 리스트태그로 작성한 후, css의 float 속성을 사용하였다.

### CSS float속성
float는 원래 '뜨다', '띄우다'라는 의미를 가지고 있다. css에서 float 속성은 이미지를 띄워서 배치를 바꿀 수 있으며 요소들을 정렬할때 쓰인다. 속성값에는 5가지가 있다.
1. none: 띄우지 않음 - 기본값
2. left: 왼쪽에 띄움
3. right: 오른쪽에 띄움
4. inherit: 부모로부터 상속받음
5. initial: 기본값으로 설정

float는 수직나열되는 요소들을 수평나열 시키고 싶을때 활용할 수 있었다. 예를 들어 원래 li태그들은 수직나열되지만, li태그들한테 float를 left 값을 주게 되면, 각각의 li들이 왼쪽으로 뜨게 되면서,
첫번째 li가 가장 왼쪽에 붙게 되고 두번째 li는 첫번째 li의 영역을 제외한 나머지 영역에서 가장 왼쪽, 세번째 li는 첫번째와 두번째 li의 영역을 제외한곳에서 가장 왼쪽으로 붙게 된다. 이런식으로 첫번째부터 마지막 li까지
모두 영역을 차지하면서 위로 올라가므로, 결국에는 수직나열 됬던 li들이 모두 수평나열 처리가 되게 된다. 이번 프로젝트에서는 요소들을 배치할때 float 속성으로 거의 다 해결했다.

### 헤더
처음에 디자인을 할때, 헤더를 상단에 fixed되게 하였으며 fixed 되었을때에는 헤더의 하단 부분만 보이도록 하였다. 그래서 코딩할때, css로 헤더에 position 속성에 fixed 값을 주었으며,
헤더에 active 클래스를 주었다. 그래서 헤더에 active 클래스가 적용되면 헤더 하단부분만 보이게끔 css에서 active 클래스에 헤더 상단부분을 display속성의 none값으로 처리했으며, 
height도 헤더 하단의 높이만큼으로 다시 지정해주었다. 그리고나서 jquery로 스크롤이 움직일때 발생되는 이벤트인 scroll을 써서 active 클래스를 문서에 더해주었다.
<script src="https://gist.github.com/jkim68888/f69616c02a416d4899aa682a52c91ed6.js"></script>
변수로 선언한 top은 현재 창의 스크롤바의 위치 값이다. 스크롤을 하지 않았다면 top값은 0인 것이다. 헤더를 스크롤을 했을때만 헤더 모양이 바뀌고, 헤더가 상단에 붙어있을때는 원래의 헤더 디자인이여야 하므로,
top값이 0 이상일때만 active 클래스를 문서에 더해주고, 나머지 경우에는 active 클래스를 제거해주어야 한다.

### 네비게이션 (gnb)
네비게이션은 풀다운 형태로 되어있으며, 메인메뉴와 서브메뉴에 마우스를 올리면 글자색이 바뀌는 호버효과를 넣었다. 일단, 서브네비게이션 글자들 뒤로 흰색 바탕이 깔려야하므로 임의로 sub_bg 라는 클래스를 css에 만들었다.
이때, sub_bg는 jquery로 문서에 동적생성 해주었다.
<script src="https://gist.github.com/jkim68888/96079ef0855ae31e6a90896fed10a9a4.js"></script>


### 메인
메인에 담긴 컨텐츠들에는 메인슬라이더, 백미당 지점, 제품, 공지사항과 이벤트, 공방이야기, 홍보 비디오, 창업문의가 있다. 메인슬라이더는 flexslider 라는 제이쿼리 플러그인을 사용하였다. 지점 부분의 슬라이더는 swiper-slider라는 제이쿼리 플러그인을 사용하였다. 제품 부분에는 직접 제이쿼리를 작성하였다. 공방이야기 부분에도 글자들이 시간차를 두고 나타나게끔 하는 효과 또한 제이쿼리를 직접 작성하였다.


### 제이쿼리 플러그인 (jQuery plugin)
메인슬라이더와 지점 파트에서 제이쿼리 플러그인을 사용하였다고 했는데, 여기서 제이쿼리 플러그인의 개념을 설명하자면, jQuery의 다양한 기능을 쉽게 사용할 수 있도록 제공해주는 라이브러리라고 할 수 있다. 다른 사람이 만들어 놓은 플러그인을 가져다가 사용할 수 있을 뿐만 아니라 직접 만들어 사용할 수도 있다. 또한 직접 만든 플러그인은 다른 개발자들에게 제공해 줄 수도 있다. flexslider와 swiper-slider가 다른 개발자가 만들어 놓은 플러그인들이다. 그것을 내가 가져와서 사용한것이다. 만들어져있는 플러그인을 가져와서 사용하는 방법은 우선, 다른개발자가 만들어놓은 플러그인 파일들을 다운받는다. 다운받은 후, css와 js 파일을 내가 만든 html에 연결한다. css는 link로, js는 script로 연결한 후 css를 내게 맞게 수정한다. jQuery에는 해당 플러그인이 제공해주는 메서드를 사용한다. 메서드 안의 이벤트들은 내게 맞게 수정하여 사용하면 된다.


### 직접 작성한 제이쿼리(1)
<script src="https://gist.github.com/jkim68888/cb640f156615d0172696e3ac86eb1f25.js"></script>

제품이 fade되는 기능을 하도록 해주는 함수를 moveFader라는 이름으로 선언하였다. 코드를 위에서 부터 읽어내려가자면, 이 함수는 먼저, 모든 제품 이미지들을(photo) 사라지게 하고(fadeOut함수) 제품 이미지의 인덱스 번호를 받아와서 해당 번호의 제품 이미지만 순서대로 보여지게 한다. 버튼 또한, 모든 버튼은 활성화되지 않고, 해당 인덱스 번호의 제품버튼만 활성화 되게끔 한다. (active라는 클래스를 이용하여, 활성화된 상태를 css에서 꾸며주었다.)

함수를 선언한 다음은 함수를 사용하여야 한다. 그래야 그 함수의 기능이 작동한다. 우선, 이미지들을 무한으로 돌아가면서 보여지게 하기 위하여 basic이라는 변수를 선언하여, 마지막 이미지가 보여졌을 시에는 basic이 0으로 되게하여 다시 첫번째 이미지가 보여지게 된다. 버튼을 클릭했을 시에는 해당 버튼의 인덱스 번호와 같은 인덱스 번호를 가진 이미지를 보여지게 하기 위하여, index라는 변수를 설정해주었다. 또한 버튼을 클릭했을 시에는 이미지들이 fade되는 기능을 하지 않게 하기 위하여, clearInterval 함수를 써서 자동으로 이미지가 돌아가지(auto) 않도록 하였다. 


### 직접 작성한 제이쿼리(2)
<script src="https://gist.github.com/jkim68888/62b395b90ed872eb52455a9875fcab17.js"></script>

공방이야기 파트에서 글씨가 시간차를 두고 나타나게 하는 효과를 주는 제이쿼리 코드이다. 우선, window창의 스크롤 좌표를 구하고, 공방이야기 부모의 y좌표를 구해주었다. 그 후, if문을 이용하여 만약 스크롤좌표가 공방이야기 부모의 y좌표값 보다 600px 내려갈 경우, 글자가 나타나는 효과(active 클래스를 css에서 설정하였다.)를 주고, 700px 올라갈 경우에는 다시 글자를 사라지게 처리하였다.



## 프로젝트를 마치며
내가 작성하는 코드들이 화면에 구현되는 것을 보니 너무 뿌듯했다. 다음 프로젝트가 더욱더 기대된다.




















